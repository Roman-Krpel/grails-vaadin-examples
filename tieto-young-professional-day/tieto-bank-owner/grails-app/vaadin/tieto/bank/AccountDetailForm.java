package tieto.bank;

import tieto.bank.State.CorporateState;
import tieto.bank.State.DefaultState;
import tieto.bank.State.PrivateState;
import tieto.bank.State.StateHolder;
import tieto.bank.admin.Account;
import tieto.bank.admin.AccountType;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.GridLayout;
import com.vaadin.ui.Label;
import com.vaadin.ui.TextField;

public class AccountDetailForm extends CustomComponent {

	@AutoGenerated
	private GridLayout mainLayout;
	@AutoGenerated
	private Button btnSave;
	@AutoGenerated
	private Button btnRemove;
	@AutoGenerated
	private TextField txtAccountBallance;
	@AutoGenerated
	private Label lblAccountBallance;

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	
	StateHolder stateHolder;
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public AccountDetailForm(Account account) {
		buildMainLayout();
		setCompositionRoot(mainLayout);
		this.stateHolder = new StateHolder(this,new DefaultState());

		// init component from account
		//txtAccountBallance.setValue(account.getBalance());
		
	}
	
	Account account;
	
	public void setAccount(Account account){
		if(account != null){
			this.account = account;
			if(AccountType.Private.equals(account.getType())){
				this.stateHolder.setState(new PrivateState());
			}
			else if(AccountType.Corporate.equals(account.getType())){
				this.stateHolder.setState(new CorporateState());				
			}
			else{
				
				// TODO : error log
			}
		}
		
		
	}

	@AutoGenerated
	private GridLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new GridLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(false);
		mainLayout.setColumns(3);
		mainLayout.setRows(2);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// lblAccountBallance
		lblAccountBallance = new Label();
		lblAccountBallance.setImmediate(false);
		lblAccountBallance.setWidth("-1px");
		lblAccountBallance.setHeight("-1px");
		lblAccountBallance.setValue("Account ballance");
		mainLayout.addComponent(lblAccountBallance, 0, 0);
		mainLayout.setComponentAlignment(lblAccountBallance, new Alignment(48));
		
		// txtAccountBallance
		txtAccountBallance = new TextField();
		txtAccountBallance.setImmediate(false);
		txtAccountBallance.setWidth("-1px");
		txtAccountBallance.setHeight("-1px");
		txtAccountBallance.setSecret(false);
		mainLayout.addComponent(txtAccountBallance, 2, 0);
		mainLayout.setComponentAlignment(txtAccountBallance, new Alignment(48));
		
		// btnRemove
		btnRemove = new Button();
		btnRemove.setCaption("Remove");
		btnRemove.setImmediate(false);
		btnRemove.setWidth("-1px");
		btnRemove.setHeight("-1px");
		mainLayout.addComponent(btnRemove, 0, 1);
		mainLayout.setComponentAlignment(btnRemove, new Alignment(48));
		
		// btnSave
		btnSave = new Button();
		btnSave.setCaption("Save");
		btnSave.setImmediate(false);
		btnSave.setWidth("-1px");
		btnSave.setHeight("-1px");
		mainLayout.addComponent(btnSave, 2, 1);
		mainLayout.setComponentAlignment(btnSave, new Alignment(48));
		
		return mainLayout;
	}

}
